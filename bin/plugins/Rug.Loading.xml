<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Rug.Loading</name>
    </assembly>
    <members>
        <member name="T:Rug.Loading.ILoadable">
            <summary>
            Loadable Interface.
            </summary>
            <autogeneratedoc />
        </member>
        <member name="M:Rug.Loading.ILoadable.Load(Rug.Loading.LoadContext,System.Xml.Linq.XElement)">
            <summary>
            Loads this instance from the specified node.
            </summary>
            <param name="node">The node.</param>
            <autogeneratedoc />
        </member>
        <member name="M:Rug.Loading.ILoadable.Save(Rug.Loading.LoadContext,System.Xml.Linq.XElement)">
            <summary>
            Saves this instance to the specified element.
            </summary>
            <param name="element">The element to save to.</param>
            <autogeneratedoc />
        </member>
        <member name="F:Rug.Loading.LoadContext.Errors">
            <summary>
            The errors encountered while loading.
            </summary>
        </member>
        <member name="F:Rug.Loading.LoadContext.Reporter">
            <summary>
            The reporter.
            </summary>
        </member>
        <member name="F:Rug.Loading.LoadContext.HasHadCriticalError">
            <summary>
            Whether the context has encountered a critical error.
            </summary>
        </member>
        <member name="M:Rug.Loading.LoadContext.#ctor(Rug.IReporter)">
            <summary>
            Initializes a new instance of the <see cref="T:Rug.Loading.LoadContext"/> class.
            </summary>
            <param name="reporter">The reporter.</param>
        </member>
        <member name="M:Rug.Loading.LoadContext.Error(System.String)">
            <summary>
            Adds the specified error message to the set of errors encountered during loading.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Rug.Loading.LoadContext.Error(System.String,System.Boolean,System.Exception)">
            <summary>
            Adds the specified error message to the set of errors encountered during loading.
            </summary>
            <param name="message">The message.</param>
            <param name="isCriticalError">if set to <c>true</c> [is critical error].</param>
            <param name="exception">The ex.</param>
        </member>
        <member name="M:Rug.Loading.LoadContext.Error(System.String,System.Xml.Linq.XObject,System.Boolean,System.Exception)">
            <summary>
            Adds the specified error message to the set of errors encountered during loading.
            </summary>
            <param name="message">The message.</param>
            <param name="node">XML node that is the source of the error.</param>
            <param name="isCriticalError">if set to <c>true</c> [is critical error].</param>
            <param name="exception">The ex.</param>
        </member>
        <member name="M:Rug.Loading.LoadContext.ReportErrors(System.Boolean)">
            <summary>
            Prints errors to the reporter
            </summary>
            <returns>System.String.</returns>
        </member>
        <member name="T:Rug.Loading.Loader">
            <summary>
            Load manager class.
            </summary>
            <autogeneratedoc />
        </member>
        <member name="M:Rug.Loading.Loader.CacheLoadables(System.Reflection.Assembly)">
            <summary>
            Scans the assembly for <see cref="T:Rug.Loading.ILoadable"/> types.
            </summary>
            <param name="assembly">The assembly to scan.</param>
        </member>
        <member name="M:Rug.Loading.Loader.GetName(System.Type)">
            <summary>
            Gets the XML name of the type.
            </summary>
            <param name="type">The type.</param>
            <returns>System.String.</returns>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException">No loadable type information could be found for the specified type.</exception>
        </member>
        <member name="M:Rug.Loading.Loader.GetTypeOfType(System.Type)">
            <summary>
            Gets the all compatible <see cref="T:Rug.Loading.ILoadable"/> types for the specified base type.
            </summary>
            <param name="baseType">The base type.</param>
            <returns>Dictionary&lt;System.String, Type&gt;.</returns>
        </member>
        <member name="M:Rug.Loading.Loader.LoadObject``1(Rug.Loading.LoadContext,System.Xml.Linq.XContainer,Rug.Loading.LoaderMode)">
            <summary>
            Loads the object.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="context"></param>
            <param name="sourceNode">The source node.</param>
            <param name="loaderMode"></param>
            <returns>T.</returns>
        </member>
        <member name="M:Rug.Loading.Loader.LoadObject``1(Rug.Loading.LoadContext,System.Xml.Linq.XContainer,System.String,Rug.Loading.LoaderMode)">
            <summary>
            Loads the object.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="context"></param>
            <param name="sourceNode">The source node.</param>
            <param name="tag">The tag.</param>
            <param name="loaderMode"></param>
            <returns>T.</returns>
        </member>
        <member name="M:Rug.Loading.Loader.LoadObject``1(Rug.Loading.LoadContext,System.Xml.Linq.XContainer,System.Type[],System.Object[],Rug.Loading.LoaderMode)">
            <summary>
            Loads the object.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="context"></param>
            <param name="sourceNode">The source node.</param>
            <param name="argTypes">The argument types.</param>
            <param name="arguments">The arguments.</param>
            <param name="loaderMode"></param>
            <returns>T.</returns>
        </member>
        <member name="M:Rug.Loading.Loader.LoadObject``1(Rug.Loading.LoadContext,System.Xml.Linq.XContainer,System.String,System.Type[],System.Object[],Rug.Loading.LoaderMode)">
            <summary>
            Loads the object.
            </summary>
            <typeparam name="T"></typeparam>        
            <param name="context"></param>
            <param name="sourceNode">The source node.</param>
            <param name="tag">The tag.</param>
            <param name="argTypes">The argument types.</param>
            <param name="arguments">The arguments.</param>
            <param name="loaderMode"></param>
            <returns>T.</returns>
        </member>
        <member name="M:Rug.Loading.Loader.LoadObjects``1(Rug.Loading.LoadContext,System.Xml.Linq.XContainer,Rug.Loading.LoaderMode)">
            <summary>
            Loads the objects.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sourceNode">The source node.</param>
            <returns>T[].</returns>
        </member>
        <member name="M:Rug.Loading.Loader.LoadObjects``1(Rug.Loading.LoadContext,System.Xml.Linq.XContainer,System.String,Rug.Loading.LoaderMode)">
            <summary>
            Loads the objects.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="tag">The tag.</param>
            <param name="sourceNode">The source node.</param>
            <returns>T[].</returns>
        </member>
        <member name="M:Rug.Loading.Loader.LoadObjects``1(Rug.Loading.LoadContext,System.Xml.Linq.XContainer,System.Type[],System.Object[],Rug.Loading.LoaderMode)">
            <summary>
            Loads the objects.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="sourceNode">The source node.</param>
            <param name="argTypes">The argument types.</param>
            <param name="arguments">The arguments.</param>
            <returns>T[].</returns>
        </member>
        <member name="M:Rug.Loading.Loader.LoadObjects``1(Rug.Loading.LoadContext,System.Xml.Linq.XContainer,System.String,System.Type[],System.Object[],Rug.Loading.LoaderMode)">
            <summary>
            Loads the objects.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="context"></param>
            <param name="sourceNode">The source node.</param>
            <param name="tag">The tag.</param>
            <param name="argTypes">The argument types.</param>
            <param name="arguments">The arguments.</param>
            <param name="loaderMode"></param>
            <returns>T[].</returns>
        </member>
        <member name="M:Rug.Loading.Loader.SaveObject(Rug.Loading.LoadContext,System.Xml.Linq.XContainer,System.Object)">
            <summary>
            Saves an object.
            </summary>
            <param name="context"></param>                
            <param name="parent">The parent node.</param>
            <param name="obj">The object.</param>
            <returns>XElement.</returns>
        </member>
        <member name="M:Rug.Loading.Loader.SaveObject(Rug.Loading.LoadContext,System.Xml.Linq.XContainer,System.String,System.Object)">
            <summary>
            Saves an object.
            </summary>
            <param name="context"></param>
            <param name="parent">The parent node.</param>
            <param name="tag">The tag.</param>
            <param name="obj">The object.</param>
            <returns>XElement.</returns>
            <exception cref="T:System.Exception">Object is not loadable</exception>
        </member>
        <member name="M:Rug.Loading.Loader.SaveObjects(Rug.Loading.LoadContext,System.Xml.Linq.XContainer,System.Collections.IEnumerable)">
            <summary>
            Saves the objects.
            </summary>
            <param name="context">Load context.</param>
            <param name="parent">The parent.</param>
            <param name="objects">The objects.</param>
        </member>
        <member name="M:Rug.Loading.Loader.SaveObjects(Rug.Loading.LoadContext,System.Xml.Linq.XContainer,System.String,System.String,System.Collections.IEnumerable)">
            <summary>
            Saves the objects.
            </summary>
            <param name="context">Load context.</param>
            <param name="parent">The parent.</param>
            <param name="collectionName">Name of the collection.</param>
            <param name="tag">The tag.</param>
            <param name="objects">The objects.</param>
        </member>
        <member name="M:Rug.Loading.Loader.SaveObjects(Rug.Loading.LoadContext,System.Xml.Linq.XContainer,System.String,System.String,System.Object[])">
            <summary>
            Saves the objects.
            </summary>
            <param name="context"></param>
            <param name="parent">The parent.</param>
            <param name="collectionName">Name of the collection.</param>
            <param name="tag">The tag.</param>
            <param name="objects">The objects.</param>
        </member>
        <member name="M:Rug.Loading.Loader.ToXmlNodeName(System.String)">
            <summary>
            Gets the name of the XML tag.
            </summary>
            <param name="original">The original.</param>
            <returns>System.String.</returns>
            <autogeneratedoc />
        </member>
        <member name="T:Rug.Loading.Loader.LoadableType">
            <summary>
            Struct for loadable type meta data.
            </summary>
        </member>
        <member name="F:Rug.Loading.Loader.LoadableType.Aliases">
            <summary>
            Aliases to search for when loading the type.
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Rug.Loading.Loader.LoadableType.Name">
            <summary>
            The XML node name for the type.
            </summary>
        </member>
        <member name="F:Rug.Loading.Loader.LoadableType.Type">
            <summary>
            The type.
            </summary>
        </member>
        <member name="M:Rug.Loading.Loader.LoadableType.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to this instance.
            </summary>
            <param name="obj">The object to compare with the current instance.</param>
            <returns><c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Rug.Loading.Loader.LoadableType.ToString">
            <summary>
            Returns a <see cref="T:System.String" /> that represents this instance.
            </summary>
            <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
        </member>
        <member name="T:Rug.Loading.NameAttribute">
            <summary>
            XML load name attribute.
            </summary>
            <autogeneratedoc />
        </member>
        <member name="F:Rug.Loading.NameAttribute.Name">
            <summary>
            The name of the XML type.
            </summary>
            <autogeneratedoc />
        </member>
        <member name="M:Rug.Loading.NameAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Rug.Loading.NameAttribute"/> class.
            </summary>
            <param name="name">The name.</param>
            <autogeneratedoc />
        </member>
        <member name="T:Rug.Direction">
            <summary>
            The direction of a message.
            </summary>
        </member>
        <member name="F:Rug.Direction.Transmit">
            <summary>
            Transmitted.
            </summary>
        </member>
        <member name="F:Rug.Direction.Receive">
            <summary>
            Received.
            </summary>
        </member>
        <member name="F:Rug.Direction.Action">
            <summary>
            Non-direction
            </summary>
        </member>
        <member name="T:Rug.ReportType">
            <summary>
            Type of report.
            </summary>
        </member>
        <member name="F:Rug.ReportType.Title">
            <summary>
            Titles
            </summary>
        </member>
        <member name="F:Rug.ReportType.Normal">
            <summary>
            Regular text.
            </summary>
        </member>
        <member name="F:Rug.ReportType.Detail">
            <summary>
            Verbose detail text.
            </summary>
        </member>
        <member name="F:Rug.ReportType.Error">
            <summary>
            Error text.
            </summary>
        </member>
        <member name="F:Rug.ReportType.Success">
            <summary>
            Success text.
            </summary>
        </member>
        <member name="F:Rug.ReportType.Action">
            <summary>
            Info about an action that has been taken.
            </summary>
        </member>
        <member name="T:Rug.IReporter">
            <summary>
            Interface for reporting debugging and logging information.
            </summary>
            <autogeneratedoc />
        </member>
    </members>
</doc>
